Python 3.12.5: The programming language.
Django 5.1: The web framework.
Django Allauth: For handling user registration and authentication.
Visual Studio Code (VS Code): Code editor.
Git: For version control (optional).

Project Structure and Required Files:
         Project Root Directory: SPOTIFIND/

         manage.py: Created automatically when you start a Django project.
         db.sqlite3: Created automatically after running migrations. 
Main Project Directory: mywebsite/

__init__.py
asgi.py
settings.py: This is where you configure your Django settings.
urls.py: Where you define your URL patterns.
wsgi.py
App Directory: spotifind/

migrations/: Folder where migrations are stored (created automatically).
__init__.py
admin.py: For registering models with the admin site.
apps.py: For app configuration.
models.py: Where you define your data models.
tests.py: For writing tests.
views.py: Where you define the logic for your views.
Templates Directory: templates/

registration/: Contains Django Allauth templates.
login.html: Login template.
signup.html: Signup template.
Static Directory: static/

css/: Folder for CSS files.
js/: Folder for JavaScript files.
images/: Folder for images.
Create Project: Open the terminal in VS Code and run:

bash
Copy code
django-admin startproject mywebsite
cd mywebsite
Create App: Inside the mywebsite/ directory, run:

bash
Copy code
python manage.py startapp spotifind
2. settings.py Configuration:
Add Installed Apps:

python
Copy code
INSTALLED_APPS = [
    # Django default apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Third-party apps
    'allauth',
    'allauth.account',
    'allauth.socialaccount',

    # Custom apps
    'spotifind',
]
Authentication Settings:

python
Copy code
AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
)

SITE_ID = 1

LOGIN_REDIRECT_URL = '/'
Database Configuration (if using the default SQLite):

python
Copy code
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}
Static and Template Configuration:

python
Copy code
STATIC_URL = '/static/'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
3. urls.py Configuration:
Create and Update mywebsite/urls.py:
python
Copy code
from django.contrib import admin
from django.urls import path, include

urlpatterns = [
    path('admin/', admin.site.urls),
    path('accounts/', include('allauth.urls')),
    path('', include('spotifind.urls')),
]
4. spotifind/urls.py Configuration:
Create spotifind/urls.py:
python
Copy code
from django.urls import path
from . import views

urlpatterns = [
    path('', views.home, name='home'),
]
5. spotifind/views.py Configuration:
Create a Basic View:
python
Copy code
from django.shortcuts import render

def home(request):
    return render(request, 'home.html')
6. Create Templates:
Create templates/home.html:

html
Copy code
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SPOTIFIND Home</title>
</head>
<body>
    <h1>Welcome to SPOTIFIND</h1>
    <p>This is the home page.</p>
</body>
</html>
Create Allauth Templates:

Create templates/registration/login.html:

html
Copy code
{% extends "base_generic.html" %}
{% block content %}
<h2>Login</h2>
<form method="post">
    {% csrf_token %}
    {{ form.as_p }}
    <button type="submit">Login</button>
</form>
{% endblock %}
Create templates/registration/signup.html:

html
Copy code
{% extends "base_generic.html" %}
{% block content %}
<h2>Sign Up</h2>
<form method="post">
    {% csrf_token %}
    {{ form.as_p }}
    <button type="submit">Sign Up</button>
</form>
{% endblock %}
7. Migrate and Run the Server:
Migrate the Database: Run the following in the terminal:

bash
Copy code
python manage.py migrate
Create a Superuser for Admin:

bash
Copy code
python manage.py createsuperuser
Run the Development Server:

bash
Copy code
python manage.py runserver
Final Notes:
Testing the Website:

Navigate to http://127.0.0.1:8000/ in your browser to see the home page.
Navigate to http://127.0.0.1:8000/accounts/login/ to see the login page.
File Names for Django and Allauth:

settings.py, urls.py, models.py, views.py, admin.py, forms.py (if needed).
Allauth templates: login.html, signup.html.


Step-by-Step Code and Setup Instructions:
1. Setting Up the Django Project:


